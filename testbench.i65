; MEGA65 and Xemu opcode/cycle meassure/test tool.
;
; Copyright (C)2025 LGB (Gábor Lénárt) <lgblgblgb@gmail.com>
;
; This program is free software; you can redistribute it and/or modify
; it under the terms of the GNU General Public License as published by
; the Free Software Foundation; either version 3 of the License, or
; (at your option) any later version.
;
; This program is distributed in the hope that it will be useful,
; but WITHOUT ANY WARRANTY; without even the implied warranty of
; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
; GNU General Public License for more details.
;
; You should have received a copy of the GNU General Public License
; along with this program.  If not, see <http://www.gnu.org/licenses/>.


.MACRO  NOP_PREFIXED
	NOP
.ENDMACRO
.MACRO  NEG_NEG_PREFIXED
	NEG
	NEG
.ENDMACRO
.MACRO	NEG_NEG_NOP_PREFIXED
	NEG
	NEG
	NOP
.ENDMACRO
.DEFINE PHW_FOR_RTS(n) (.LOBYTE(n-1) << 8) + (.HIBYTE(n-1))
.DEFINE PHW_FOR_RTI(n) (.LOBYTE(n) << 8) + (.HIBYTE(n))
test_abs_data = TEMP_ZP + test_zp_data


TESTING $0000	; |BRK|
	BRK

TESTING $0100	; |ORA ($nn,X)|
	ORA	(test_zp_ptr,X)

TESTING $0200	; |CLE|
	CLE

TESTING $0300	; |SEE|
	SEE

TESTING $0400	; |TSB $nn|
	TSB	Z:test_zp_data

TESTING $0500	; |ORA $nn|
	ORA	Z:test_zp_data

TESTING $0503	; |ORQ $nn| NEG_NEG_PREFIXED
	NEG_NEG_PREFIXED
	ORA	Z:test_zp_data

TESTING $0600	; |ASL $nn|
	ASL	Z:test_zp_data

TESTING $0603	; |ASLQ $nn| NEG_NEG_PREFIXED
	NEG_NEG_PREFIXED
	ASL	Z:test_zp_data

TESTING $0700	; |RMB0 $nn|
	RMB0	Z:test_zp_data

TESTING $0800	; |PHP|
	PHP

TESTING $0900	; |ORA #$nn|
	ORA	#$80

TESTING $0A00	; |ASL A|
	ASL	A

TESTING $0A03	; |ASLQ Q| NEG_NEG_PREFIXED
	NEG_NEG_PREFIXED
	ASL	A

TESTING $0B00	; |TSY|
	TSY

TESTING $0C00	; |TSB $nnnn|
	TSB	A:test_abs_data

TESTING $0D00	; |ORA $nnnn|
	ORA	A:test_abs_data

TESTING $0D03	; |ORQ $nnnn| NEG_NEG_PREFIXED
	NEG_NEG_PREFIXED
	ORA	A:test_abs_data

TESTING $0E00	; |ASL $nnnn|
	ASL	A:test_abs_data

TESTING $0E03	; |ASLQ $nnnn| NEG_NEG_PREFIXED
	NEG_NEG_PREFIXED
	ASL	A:test_abs_data

TESTING $0F00	; |BBR0 $nn,$rr|
	BBR0	test_zp_ff, :+
TESTING $0F01	; |BBR0 $nn,$rr| (conditional branch taken)
	BBR0	test_zp_00, :+

TESTING $10FF	; |BPL $rr| - extra stuff
	LDA	#$FF
TESTING $1000	; |BPL $rr|
	LDA	#$FF
	BPL	:+
TESTING $10FF	; |BPL $rr| (conditional branch taken) - extra stuff
	LDA	#$00
TESTING $1001	; |BPL $rr| (conditional branch taken)
	LDA	#$00
	BPL	:+

TESTING $1100	; |ORA ($nn),Y|
	ORA	(test_zp_ptr),Y

TESTING $1200	; |ORA ($nn),Z|
	ORA	(test_zp_ptr),Z

TESTING $1202	; |ORA [$nn],Z| NOP_PREFIXED
	NOP_PREFIXED
	ORA	(test_zp_ptr),Z

TESTING $1203	; |ORQ ($nn)| NEG_NEG_PREFIXED (no Z!)
	NEG_NEG_PREFIXED
	ORA	(test_zp_ptr),Z

TESTING $1204	; |ORQ [$nn]| NEG_NEG_NOP_PREFIXED (no Z!)
	NEG_NEG_NOP_PREFIXED
	ORA	(test_zp_ptr),Z

TESTING $13FF	; |LBPL $rr| - extra stuff
	LDA	#$FF
TESTING $1300	; |LBPL $rr|
	LDA	#$FF
	LBPL	:+
TESTING $13FF	; |LBPL $rr| (conditional branch taken) - extra stuff
	LDA	#$00
TESTING $1301	; |LBPL $rr| (conditional branch taken)
	LDA	#$00
	LBPL	:+


TESTING $1400	; |TRB $nn|
	TRB	Z:test_zp_data

TESTING $1500	; |ORA $nn,X|
	ORA	Z:test_zp_data,X

TESTING $1600	; |ASL $nn,X|
	ASL	Z:test_zp_data,X

TESTING $1603	; |ASLQ $nn,X| NEG_NEG_PREFIXED
	NEG_NEG_PREFIXED
	ASL	Z:test_zp_data,X

TESTING $1700	; |RMB1 $nn|
	RMB1	Z:test_zp_data

TESTING $1800	; |CLC|
	CLC

TESTING $1900	; |ORA $nnnn,Y|
	ORA	A:test_abs_data,Y

TESTING $1A00	; |INA|
	INA

TESTING $1A03	; |INQ| NEG_NEG_PREFIXED
	NEG_NEG_PREFIXED
	INA

TESTING $1B00	; |INZ|
	INZ

TESTING $1C00	; |TRB $nnnn|
	TRB	A:test_abs_data

TESTING $1D00	; |ORA $nnnn,X|
	ORA	A:test_abs_data,X

TESTING $1E00	; |ASL $nnnn,X|
	ASL	A:test_abs_data,X

TESTING $1E03	; |ASLQ $nnnn,X| NEG_NEG_PREFIXED
	NEG_NEG_PREFIXED
	ASL	A:test_abs_data,X

TESTING $1F00	; |BBR1 $nn,$rr|
	BBR1	test_zp_ff, :+
TESTING $1F01	; |BBR1 $nn,$rr| (conditional branch taken)
	BBR1	test_zp_00, :+

TESTING $2000	; |JSR $nnnn|
	JSR	:+

TESTING $2100	; |AND ($nn,X)|
	AND	(test_zp_ptr,X)

TESTING $2200	; |JSR ($nnnn)|
	JSR	(IRQ_VECTOR)

TESTING $2300	; |JSR ($nnnn,X)|
	JSR	(IRQ_VECTOR,X)

TESTING $2400	; |BIT $nn|
	BIT	Z:test_zp_data

TESTING $2403	; |BITQ $nn| NEG_NEG_PREFIXED
	NEG_NEG_PREFIXED
	BIT	Z:test_zp_data

TESTING $2500	; |AND $nn|
	AND	Z:test_zp_data

TESTING $2503	; |ANDQ $nn| NEG_NEG_PREFIXED
	NEG_NEG_PREFIXED
	AND	Z:test_zp_data

TESTING $2600	; |ROL $nn|
	ROL	Z:test_zp_data

TESTING $2603	; |ROLQ $nn| NEG_NEG_PREFIXED
	NEG_NEG_PREFIXED
	ROL	Z:test_zp_data

TESTING $2700	; |RMB2 $nn|
	RMB2	Z:test_zp_data

TESTING $2800	; |PLP|
	PLP

TESTING $2900	; |AND #$nn|
	AND	#$80

TESTING $2A00	; |ROL A|
	ROL	A

TESTING $2A03	; |ROLQ Q| NEG_NEG_PREFIXED
	NEG_NEG_PREFIXED
	ROL	A

TESTING $2B00	; |TYS|
	TYS

TESTING $2C00	; |BIT $nnnn|
	BIT	A:test_abs_data

TESTING $2C03	; |BITQ $nnnn| NEG_NEG_PREFIXED
	NEG_NEG_PREFIXED
	BIT	A:test_abs_data

TESTING $2D00	; |AND $nnnn|
	AND	A:test_abs_data

TESTING $2D03	; |ANDQ $nnnn| NEG_NEG_PREFIXED
	NEG_NEG_PREFIXED
	AND	A:test_abs_data

TESTING $2E00	; |ROL $nnnn|
	ROL	A:test_abs_data

TESTING $2E03	; |ROLQ $nnnn| NEG_NEG_PREFIXED
	NEG_NEG_PREFIXED
	ROL A:test_abs_data

TESTING $2F00	; |BBR2 $nn,$rr|
	BBR2	test_zp_ff, :+
TESTING $2F01	; |BBR2 $nn,$rr| (conditional branch taken)
	BBR2	test_zp_00, :+

TESTING $30FF	; |BMI $rr| - extra stuff
	LDA	#$00
TESTING $3000	; |BMI $rr|
	LDA	#$00
	BMI	:+
TESTING $30FF	; |BMI $rr| (conditional branch taken) - extra stuff
	LDA	#$FF
TESTING $3001	; |BMI $rr| (conditional branch taken)
	LDA	#$FF
	BMI	:+

TESTING $3100	; |AND ($nn),Y|
	AND	(test_zp_ptr),Y

TESTING $3200	; |AND ($nn),Z|
	AND	(test_zp_ptr),Z

TESTING $3202	; |AND [$nn],Z| NOP_PREFIXED
	NOP_PREFIXED
	AND	(test_zp_ptr),Z

TESTING $3203	; |ANDQ ($nn)| NEG_NEG_PREFIXED (no Z!)
	NEG_NEG_PREFIXED
	AND	(test_zp_ptr),Z

TESTING $3204	; |ANDQ [$nn]| NEG_NEG_NOP_PREFIXED (no Z!)
	NEG_NEG_NOP_PREFIXED
	AND	(test_zp_ptr),Z

TESTING $33FF	; |LBMI $rrrr| - extra stuff
	LDA	#$00
TESTING $3300	; |LBMI $rrrr|
	LDA	#$00
	LBMI	:+
TESTING $33FF	; |LBMI $rrrr| (conditional branch taken) - extra stuff
	LDA	#$FF
TESTING $3301	; |LBMI $rrrr| (conditional branch taken)
	LDA	#$FF
	LBMI	:+

TESTING $3400	; |BIT $nn,X|
	BIT	Z:test_zp_data,X

TESTING $3500	; |AND $nn,X|
	AND	Z:test_zp_data,X

TESTING $3600	; |ROL $nn,X|
	ROL	Z:test_zp_data,X

TESTING $3603	; |ROLQ $nn,X| NEG_NEG_PREFIXED
	NEG_NEG_PREFIXED
	ROL	Z:test_zp_data,X

TESTING $3700	; |RMB3 $nn|
	RMB3	Z:test_zp_data

TESTING $3800	; |SEC|
	SEC

TESTING $3900	; |AND $nnnn,Y|
	AND	A:test_abs_data,Y

TESTING $3A00	; |DEA|
	DEA

TESTING $3A03	; |DEQ| NEG_NEG_PREFIXED
	NEG_NEG_PREFIXED
	DEA

TESTING $3B00	; |DEZ|
	DEZ

TESTING $3C00	; |BIT $nnnn,X|
	BIT	A:test_abs_data,X

TESTING $3D00	; |AND $nnnn,X|
	AND	A:test_abs_data,X

TESTING $3E00	; |ROL $nnnn,X|
	ROL	A:test_abs_data,X

TESTING $3E03	; |ROLQ $nnnn,X| NEG_NEG_PREFIXED
	NEG_NEG_PREFIXED
	ROL	A:test_abs_data,X

TESTING $3F00	; |BBR3 $nn,$rr|
	BBR3	test_zp_ff, :+
TESTING $3F01	; |BBR3 $nn,$rr| (conditional branch taken)
	BBR3	test_zp_00, :+

; TODO: this seems to be unstable on MEGA65 - works on Xemu though.
TESTING $40FF	; |RTI| - extra stuff
	PHP
	PHW	#PHW_FOR_RTI(:+)
TESTING $4000	; |RTI|
	PHP
	PHW	#PHW_FOR_RTI(:+)
	RTI

TESTING $4100	; |EOR ($nn,X)|
	EOR	(test_zp_ptr,X)

TESTING $4200	; |NEG|
	NEG

TESTING $4203	; |NEGQ| NEG_NEG_PREFIXED
	NEG_NEG_PREFIXED
	NEG

TESTING $4300	; |ASR|
	ASR	A

TESTING $4303	; |ASRQ| NEG_NEG_PREFIXED
	NEG_NEG_PREFIXED
	ASR	A

TESTING $4400	; |ASR $nn|
	ASR	Z:test_zp_data

TESTING $4403	; |ASRQ $nn| NEG_NEG_PREFIXED
	NEG_NEG_PREFIXED
	ASR	Z:test_zp_data

TESTING $4500	; |EOR $nn|
	EOR	Z:test_zp_data

TESTING $4503	; |EORQ $nn| NEG_NEG_PREFIXED
	NEG_NEG_PREFIXED
	EOR	Z:test_zp_data

TESTING $4600	; |LSR $nn|
	LSR	Z:test_zp_data

TESTING $4603	; |LSRQ $nn| NEG_NEG_PREFIXED
	NEG_NEG_PREFIXED
	LSR	Z:test_zp_data

TESTING $4700	; |RMB4 $nn|
	RMB4	Z:test_zp_data

TESTING $4800	; |PHA|
	PHA

TESTING $4900	; |EOR #$nn|
	EOR	#$00

TESTING $4A00	; |LSR A|
	LSR	A

TESTING $4A03	; |LSRQ Q| NEG_NEG_PREFIXED
	NEG_NEG_PREFIXED
	LSR	A

TESTING $4B00	; |TAZ|
	TAZ

TESTING $4C00	; |JMP $nnnn|
	JMP	:+

TESTING $4D00	; |EOR $nnnn|
	EOR	A:test_abs_data

TESTING $4D03	; |EORQ $nnnn| NEG_NEG_PREFIXED
	NEG_NEG_PREFIXED
	EOR	A:test_abs_data

TESTING $4E00	; |LSR $nnnn|
	LSR	A:test_abs_data

TESTING $4E03	; |LSRQ $nnnn| NEG_NEG_PREFIXED
	NEG_NEG_PREFIXED
	LSR	A:test_abs_data

TESTING $4F00	; |BBR4 $nn,$rr|
	BBR4	test_zp_ff, :+
TESTING $4F01	; |BBR4 $nn,$rr| (conditional branch taken)
	BBR4	test_zp_00, :+

TESTING $50FF	; |BVC $rr| - extra stuff
	BIT	Z:test_zp_ff	; used here to set V flag
TESTING $5000	; |BVC $rr|
	BIT	Z:test_zp_ff	; used here to set V flag
	BVC	:+
TESTING $50FF	; |BVC $rr| (conditional branch taken) - extra stuff
	CLV
TESTING $5001	; |BVC $rr| (conditional branch taken)
	CLV
	BVC	:+

TESTING $5100	; |EOR ($nn),Y|
	EOR	(test_zp_ptr),Y

TESTING $5200	; |EOR ($nn),Z|
	EOR	(test_zp_ptr),Z

TESTING $5202	; |EOR [$nn],Z| NOP_PREFIXED
	NOP_PREFIXED
	EOR	(test_zp_ptr),Z

TESTING $5203	; |EORQ ($nn)| NEG_NEG_PREFIXED (no Z!)
	NEG_NEG_PREFIXED
	EOR	(test_zp_ptr),Z

TESTING $5204	; |EORQ [$nn]| NEG_NEG_NOP_PREFIXED (no Z!)
	NEG_NEG_NOP_PREFIXED
	EOR	(test_zp_ptr),Z

TESTING $53FF	; |LBVC $rrrr| - extra stuff
	BIT     Z:test_zp_ff	; used here to set V flag
TESTING $5300	; |LBVC $rrrr|
	BIT     Z:test_zp_ff	; used here to set V flag
	LBVC	:+
TESTING $53FF	; |LBVC $rrrr| (conditional branch taken) - extra stuff
	CLV
TESTING $5301	; |LBVC $rrrr| (conditional branch taken)
	CLV
	LBVC	:+

TESTING $5400	; |ASR $nn,X|
	ASR	Z:test_zp_data,X

TESTING $5403	; |ASRQ $nn,X| NEG_NEG_PREFIXED
	NEG_NEG_PREFIXED
	ASR	Z:test_zp_data,X

TESTING $5500	; |EOR $nn,X|
	EOR	Z:test_zp_data,X

TESTING $5600	; |LSR $nn,X|
	LSR	Z:test_zp_data,X

TESTING $5603	; |LSRQ $nn,X| NEG_NEG_PREFIXED
	NEG_NEG_PREFIXED
	LSR	Z:test_zp_data,X

TESTING $5700	; |RMB5 $nn|
	RMB5	Z:test_zp_data

TESTING $5800	; |CLI|
	CLI

TESTING $5900	; |EOR $nnnn,Y|
	EOR	A:test_abs_data,Y

TESTING $5A00	; |PHY|
	PHY

TESTING $5BFF	; |TAB| - extra stuff
	LDA	#.HIBYTE(TEMP_ZP)
TESTING $5B00	; |TAB|
	LDA	#.HIBYTE(TEMP_ZP)
	TAB

TESTING $5C00	; |MAP|
	MAP			; we can test MAP as-is, as only A register is messed up by the tester but others being zero, it won't cause problems (hopefully)

TESTING $5D00	; |EOR $nnnn,X|
	EOR	A:test_abs_data,X

TESTING $5E00	; |LSR $nnnn,X|
	LSR	A:test_abs_data,X

TESTING $5E03	; |LSRQ $nnnn,X| NEG_NEG_PREFIXED
	NEG_NEG_PREFIXED
	LSR	A:test_abs_data,X

TESTING $5F00	; |BBR5 $nn,$rr|
	BBR5	test_zp_ff, :+
TESTING $5F01	; |BBR5 $nn,$rr| (conditional branch taken)
	BBR5	test_zp_00, :+

TESTING $60FF	; |RTS| - extra stuff
	PHW	#PHW_FOR_RTS(:+)
TESTING $6000	; |RTS|
	PHW	#PHW_FOR_RTS(:+)
	RTS

TESTING $6100	; |ADC ($nn,X)|
	ADC	(test_zp_ptr,X)

TESTING $62FF	; |RTS #$nn| - extra stuff
	PHW	#PHW_FOR_RTS(:+)
TESTING $6200	; |RTS #$nn|
	PHW	#PHW_FOR_RTS(:+)
	.BYTE	$62, $00	; RTS #0

TESTING $6300	; |BSR $rrrr|
	BSR	:+

TESTING $6400	; |STZ $nn|
	STZ	Z:test_zp_data

TESTING $6500	; |ADC $nn|
	ADC	Z:test_zp_data

TESTING $6503	; |ADCQ $nn| NEG_NEG_PREFIXED
	NEG_NEG_PREFIXED
	ADC	Z:test_zp_data

TESTING $6600	; |ROR $nn|
	ROR	Z:test_zp_data

TESTING $6603	; |RORQ $nn| NEG_NEG_PREFIXED
	NEG_NEG_PREFIXED
	ROR	Z:test_zp_data

TESTING $6700	; |RMB6 $nn|
	RMB6	Z:test_zp_data

TESTING $6800	; |PLA|
	PLA

TESTING $6900	; |ADC #$nn|
	ADC	#0

TESTING $6A00	; |ROR A|
	ROR	A

TESTING $6A03	; |RORQ Q| NEG_NEG_PREFIXED
	NEG_NEG_PREFIXED
	ROR	A

TESTING $6B00	; |TZA|
	TZA

TESTING $6C00	; |JMP ($nnnn)|
	JMP	(IRQ_VECTOR)

TESTING $6D00	; |ADC $nnnn|
	ADC	A:test_abs_data

TESTING $6D03	; |ADCQ $nnnn| NEG_NEG_PREFIXED
	NEG_NEG_PREFIXED
	ADC	A:test_abs_data

TESTING $6E00	; |ROR $nnnn|
	ROR	A:test_abs_data

TESTING $6E03	; |RORQ $nnnn| NEG_NEG_PREFIXED
	NEG_NEG_PREFIXED
	ROR	A:test_abs_data

TESTING $6F00	; |BBR6 $nn,$rr|
	BBR6	test_zp_ff, :+
TESTING $6F01	; |BBR6 $nn,$rr| (conditional branch taken)
	BBR6	test_zp_00, :+

TESTING $70FF	; |BVS $rr| - extra stuff
	CLV
TESTING $7000	; |BVS $rr|
	CLV
	BVS	:+
TESTING $70FF	; |BVS $rr| (conditional branch taken) - extra stuff
	BIT	Z:test_zp_ff
TESTING $7001	; |BVS $rr| (conditional branch taken)
	BIT	Z:test_zp_ff
	BVS	:+

TESTING $7100	; |ADC ($nn),Y|
	ADC	(test_zp_ptr),Y

TESTING $7200	; |ADC ($nn),Z|
	ADC	(test_zp_ptr),Z

TESTING $7202	; |ADC [$nn],Z| NOP_PREFIXED
	NEG_NEG_PREFIXED
	ADC	(test_zp_ptr),Z

TESTING $7203	; |ADCQ ($nn)| NEG_NEG_PREFIXED (no Z!)
	NEG_NEG_PREFIXED
	ADC	(test_zp_ptr),Z

TESTING $7204	; |ADCQ [$nn]| NEG_NEG_NOP_PREFIXED (no Z!)
	NEG_NEG_NOP_PREFIXED
	ADC	(test_zp_ptr),Z

TESTING $73FF	; |LBVS $rrrr| - extra stuff
	CLV
TESTING $7300	; |LBVS $rrrr|
	CLV
	LBVS	:+
TESTING $73FF	; |LBVS $rrrr| (conditional branch taken) - extra stuff
	BIT	Z:test_zp_ff
TESTING $7301	; |LBVS $rrrr| (conditional branch taken)
	BIT	Z:test_zp_ff
	LBVS	:+

TESTING $7400	; |STZ $nn,X|
	STZ	Z:test_zp_data,X

TESTING $7500	; |ADC $nn,X|
	ADC	Z:test_zp_data,X

TESTING $7600	; |ROR $nn,X|
	ROR	Z:test_zp_data,X

TESTING $7603	; |RORQ $nn,X| NEG_NEG_PREFIXED
	NEG_NEG_PREFIXED
	ROR	Z:test_zp_data,X

TESTING $7700	; |RMB7 $nn|
	RMB7	Z:test_zp_data

TESTING $7800	; |SEI|
	SEI

TESTING $7900	; |ADC $nnnn,Y|
	ADC	A:test_abs_data,Y

TESTING $7A00	; |PLY|
	PLY

TESTING $7B00	; |TBA|
	TBA

TESTING $7C00	; |JMP ($nnnn,X)|
	JMP	(IRQ_VECTOR,X)		; X is zero during tests

TESTING $7D00	; |ADC $nnnn,X|
	ADC	A:test_abs_data,X

TESTING $7E00	; |ROR $nnnn,X|
	ROR	A:test_abs_data,X

TESTING $7E03	; |RORQ $nnnn,X| NEG_NEG_PREFIXED
	NEG_NEG_PREFIXED
	ROR	A:test_abs_data,X

TESTING $7F00	; |BBR7 $nn,$rr|
	BBR7	test_zp_ff, :+
TESTING $7F01	; |BBR7 $nn,$rr| (conditional branch taken)
	BBR7	test_zp_00, :+

TESTING $8000	; |BRA $rr|
	BRA	:+

TESTING $8100	; |STA ($nn,X)|
	STA	(test_zp_ptr,X)

TESTING $82FF	; |STA ($nn,SP),Y| - extra stuff
	PHW	#$0008
	LDA	#1
	PLA
	PLA
TESTING $8200	; |STA ($nn,SP),Y|
	PHW	#$0008		; test_abs_data	- FIXME
	LDA	#1
	STA	(1,SP),Y
	PLA			; !!! if removed, MEGA65 crashes ...
	PLA

TESTING $8300	; |LBRA $rrrr|
	LBRA	:+

TESTING $8400	; |STY $nn|
	STY	Z:test_zp_data

TESTING $8500	; |STA $nn|
	STA	Z:test_zp_data

TESTING $8503	; |STQ $nn| NEG_NEG_PREFIXED
	NEG_NEG_PREFIXED
	STA	Z:test_zp_data

TESTING $8600	; |STX $nn|
	STX	Z:test_zp_data

TESTING $8700	; |SMB0 $nn|
	SMB0	Z:test_zp_data

TESTING $8800	; |DEY|
	DEY

TESTING $8900	; |BIT #$nn|
	BIT	#$00

TESTING $8A00	; |TXA|
	TXA

TESTING $8B00	; |STY $nnnn,X|
	STY	A:test_abs_data,X

TESTING $8C00	; |STY $nnnn|
	STY	A:test_abs_data

TESTING $8D00	; |STA $nnnn|
	STA	A:test_abs_data

TESTING $8D03	; |STQ $nnnn| NEG_NEG_PREFIXED
	NEG_NEG_PREFIXED
	STA	A:test_abs_data

TESTING $8E00	; |STX $nnnn|
	STX	A:test_abs_data

TESTING $8F00	; |BBS0 $nn,$rr|
	BBS0	test_zp_00, :+
TESTING $8F01	; |BBS0 $nn,$rr| (conditional branch taken)
	BBS0	test_zp_ff, :+

TESTING $90FF	; |BCC $rr| - extra stuff
	SEC
TESTING $9000	; |BCC $rr|
	SEC
	BCC	:+
TESTING $90FF	; |BCC $rr| (conditional branch taken) - extra stuff
	CLC
TESTING $9001	; |BCC $rr| (conditional branch taken)
	CLC
	BCC	:+

TESTING $9100	; |STA ($nn),Y|
	STA	(test_zp_ptr),Y

TESTING $9200	; |STA ($nn),Z|
	STA	(test_zp_ptr),Z

TESTING $9202	; |STA [$nn],Z| NOP_PREFIXED
	NOP_PREFIXED
	STA	(test_zp_ptr),Z

TESTING $9203	; |STQ ($nn)| NEG_NEG_PREFIXED (no Z!)
	NEG_NEG_PREFIXED
	STA	(test_zp_ptr),Z

TESTING $9204	; |STQ [$nn]| NEG_NEG_NOP_PREFIXED (no Z!)
	NEG_NEG_NOP_PREFIXED
	STA	(test_zp_ptr),Z

TESTING $93FF	; |LBCC $rrrr| - extra stuff
	SEC
TESTING $9300	; |LBCC $rrrr|
	SEC
	LBCC	:+
TESTING $93FF	; |LBCC $rrrr| (conditional branch taken) - extra stuff
	CLC
TESTING $9301	; |LBCC $rrrr| (conditional branch taken)
	CLC
	LBCC	:+

TESTING $9400	; |STY $nn,X|
	STY	Z:test_zp_data,X

TESTING $9500	; |STA $nn,X|
	STA	Z:test_zp_data,X

TESTING $9600	; |STX $nn,Y|
	STX	Z:test_zp_data,Y

TESTING $9700	; |SMB1 $nn|
	SMB1	Z:test_zp_data

TESTING $9800	; |TYA|
	TYA

TESTING $9900	; |STA $nnnn,Y|
	STA	A:test_abs_data,Y

TESTING $9A00	; |TXS|
	TXS

TESTING $9B00	; |STX $nnnn,Y|
	STX	A:test_abs_data,Y

TESTING $9C00	; |STZ $nnnn|
	STZ	A:test_abs_data

TESTING $9D00	; |STA $nnnn,X|
	STA	A:test_abs_data,X

TESTING $9E00	; |STZ $nnnn,X|
	STZ	A:test_abs_data,X


TESTING $9F00	; |BBS1 $nn,$rr|
	BBS1	test_zp_00, :+
TESTING $9F01	; |BBS1 $nn,$rr| (conditional branch taken)
	BBS1	test_zp_ff, :+

TESTING $A000	; |LDY #$nn|
	LDY	#$80

TESTING $A100	; |LDA ($nn,X)|
	LDA	(test_zp_ptr,X)

TESTING $A200	; |LDX #$nn|
	LDX	#$80

TESTING $A300	; |LDZ #$nn|
	LDZ	#$80

TESTING $A400	; |LDY $nn|
	LDY	Z:test_zp_data

TESTING $A500	; |LDA $nn|
	LDA	Z:test_zp_data

TESTING $A503	; |LDQ $nn| NEG_NEG_PREFIXED
	NEG_NEG_PREFIXED
	LDA	Z:test_zp_data

TESTING $A600	; |LDX $nn|
	LDX	Z:test_zp_data

TESTING $A700	; |SMB2 $nn|
	SMB2	Z:test_zp_data

TESTING $A800	; |TAY|
	TAY

TESTING $A900	; |LDA #$nn|
	LDA	#$80

TESTING $AA00	; |TAX|
	TAX

TESTING $AB00	; |LDZ $nnnn|
	LDZ	A:test_abs_data

TESTING $AC00	; |LDY $nnnn|
	LDY	A:test_abs_data

TESTING $AD00	; |LDA $nnnn|
	LDA	A:test_abs_data

TESTING $AD03	; |LDQ $nnnn| NEG_NEG_PREFIXED
	NEG_NEG_PREFIXED
	LDA	A:test_abs_data

TESTING $AE00	; |LDX $nnnn|
	LDX	A:test_abs_data

TESTING $AF00	; |BBS2 $nn,$rr|
	BBS2	test_zp_00, :+
TESTING $AF01	; |BBS2 $nn,$rr| (conditional branch taken)
	BBS2	test_zp_ff, :+

TESTING $B0FF	; |BCS $rr| - extra stuff
	CLC
TESTING $B000	; |BCS $rr|
	CLC
	BCS	:+
TESTING $B0FF	; |BCS $rr| (conditional branch taken) - extra stuff
	SEC
TESTING $B001	; |BCS $rr| (conditional branch taken)
	SEC
	BCS	:+

TESTING $B100	; |LDA ($nn),Y|
	LDA	(test_zp_ptr),Y

TESTING $B200	; |LDA ($nn),Z|
	LDA	(test_zp_ptr),Z

TESTING $B202	; |LDA [$nn],Z| NOP_PREFIXED
	NEG_NEG_PREFIXED
	LDA	(test_zp_ptr),Z

TESTING $B203	; |LDQ ($nn),Z| NEG_NEG_PREFIXED
	NEG_NEG_PREFIXED
	LDA	(test_zp_ptr),Z

TESTING $B204	; |LDQ [$nn],Z| NEG_NEG_NOP_PREFIXED
	NEG_NEG_NOP_PREFIXED
	LDA	(test_zp_ptr),Z

TESTING $B3FF	; |LBCS $rrrr| - extra stuff
	CLC
TESTING $B300	; |LBCS $rrrr|
	CLC
	LBCS	:+
TESTING $B3FF	; |LBCS $rrrr| (conditional branch taken) - extra stuff
	SEC
TESTING $B301	; |LBCS $rrrr| (conditional branch taken)
	SEC
	LBCS	:+

TESTING $B400	; |LDY $nn,X|
	LDY	Z:test_zp_data,X

TESTING $B500	; |LDA $nn,X|
	LDA	Z:test_zp_data,X

TESTING $B600	; |LDX $nn,Y|
	LDX	Z:test_zp_data,Y

TESTING $B700	; |SMB3 $nn|
	SMB3	Z:test_zp_data

TESTING $B800	; |CLV|
	CLV

TESTING $B900	; |LDA $nnnn,Y|
	LDA	A:test_abs_data,Y

TESTING $BA00	; |TSX|
	TSX

TESTING $BB00	; |LDZ $nnnn,X|
	LDZ	A:test_abs_data,X

TESTING $BC00	; |LDY $nnnn,X|
	LDY	A:test_abs_data,X

TESTING $BD00	; |LDA $nnnn,X|
	LDA	A:test_abs_data,X

TESTING $BE00	; |LDX $nnnn,Y|
	LDX	A:test_abs_data,Y

TESTING $BF00	; |BBS3 $nn,$rr|
	BBS3	test_zp_00, :+
TESTING $BF01	; |BBS3 $nn,$rr| (conditional branch taken)
	BBS3	test_zp_ff, :+

TESTING $C000	; |CPY #$nn|
	CPY	#$80

TESTING $C100	; |CMP ($nn,X)|
	CMP	(test_zp_ptr,X)

TESTING $C200	; |CPZ #$nn|
	CPZ	#$80

TESTING $C300	; |DEW $nn|
	DEW	Z:test_zp_data

TESTING $C400	; |CPY $nn|
	CPY	Z:test_zp_data

TESTING $C500	; |CMP $nn|
	CMP	Z:test_zp_data

TESTING $C503	; |CMPQ $nn| NEG_NEG_PREFIXED
	NEG_NEG_PREFIXED
	CMP	Z:test_zp_data

TESTING $C600	; |DEC $nn|
	DEC	Z:test_zp_data

TESTING $C603	; |DEQ $nn| NEG_NEG_PREFIXED
	NEG_NEG_PREFIXED
	DEC	Z:test_zp_data

TESTING $C700	; |SMB4 $nn|
	SMB4	Z:test_zp_data

TESTING $C800	; |INY|
	INY

TESTING $C900	; |CMP #$nn|
	CMP	#$00

TESTING $CA00	; |DEX|
	DEX

TESTING $CB00	; |ASW $nnnn|
	ASW	A:test_abs_data

TESTING $CC00	; |CPY $nnnn|
	CPY	A:test_abs_data

TESTING $CD00	; |CMP $nnnn|
	CMP	A:test_abs_data

TESTING $CD03	; |CMPQ $nnnn| NEG_NEG_PREFIXED
	NEG_NEG_PREFIXED
	CMP	A:test_abs_data

TESTING $CE00	; |DEC $nnnn|
	DEC	A:test_abs_data

TESTING $CE03	; |DEQ $nnnn| NEG_NEG_PREFIXED
	NEG_NEG_PREFIXED
	DEC	A:test_abs_data

TESTING $CF00	; |BBS4 $nn,$rr|
	BBS4	test_zp_00, :+
TESTING $CF01	; |BBS4 $nn,$rr| (conditional branch taken)
	BBS4	test_zp_ff, :+

TESTING $D0FF	; |BNE $rr| - extra stuff
	LDA	#0
TESTING $D000	; |BNE $rr|
	LDA	#0
	BNE	:+
TESTING $D0FF	; |BNE $rr| (conditional branch taken) - extra stuff
	LDA	#1
TESTING $D001	; |BNE $rr| (conditional branch taken)
	LDA	#1
	BNE	:+

TESTING $D100	; |CMP ($nn),Y|
	CMP	(test_zp_ptr),Y

TESTING $D200	; |CMP ($nn),Z|
	CMP	(test_zp_ptr),Z

TESTING $D202	; |CMP [$nn],Z| NOP_PREFIXED
	NOP_PREFIXED
	CMP	(test_zp_ptr),Z

TESTING $D203	; |CMPQ ($nn)| NEG_NEG_PREFIXED (no Z!)
	NEG_NEG_PREFIXED
	CMP	(test_zp_ptr),Z

TESTING $D204	; |CMPQ [$nn]| NEG_NEG_NOP_PREFIXED (no Z!)
	NEG_NEG_NOP_PREFIXED
	CMP	(test_zp_ptr),Z

TESTING $D3FF	; |BNE $rrrr| - extra stuff
	LDA	#0
TESTING $D300	; |BNE $rrrr|
	LDA	#0
	LBNE	:+
TESTING $D3FF	; |BNE $rrrr| (conditional branch taken) - extra stuff
	LDA	#1
TESTING $D301	; |BNE $rrrr| (conditional branch taken)
	LDA	#1
	LBNE	:+

TESTING $D400	; |CPZ $nn|
	CPZ	Z:test_zp_data

TESTING $D500	; |CMP $nn,X|
	CMP	Z:test_zp_data,X

TESTING $D600	; |DEC $nn,X|
	DEC	Z:test_zp_data,X

TESTING $D603	; |DEQ $nn,X| NEG_NEG_PREFIXED
	NEG_NEG_PREFIXED
	DEC	Z:test_zp_data,X

TESTING $D700	; |SMB5 $nn|
	SMB5	Z:test_zp_data

TESTING $D800	; |CLD|
	CLD

TESTING $D900	; |CMP $nnnn,Y|
	CMP	A:test_abs_data,Y

TESTING $DA00	; |PHX|
	PHX

TESTING $DB00	; |PHZ|
	PHZ

TESTING $DC00	; |CPZ $nnnn|
	CPZ	A:test_abs_data

TESTING $DD00	; |CMP $nnnn,X|
	CMP	A:test_abs_data,X

TESTING $DE00	; |DEC $nnnn,X|
	DEC	A:test_abs_data,X

TESTING $DE03	; |DEQ $nnnn,X| NEG_NEG_PREFIXED
	NEG_NEG_PREFIXED
	DEC	A:test_abs_data,X

TESTING $DF00	; |BBS5 $nn,$rr|
	BBS5	test_zp_00, :+
TESTING $DF01	; |BBS5 $nn,$rr| (conditional branch taken)
	BBS5	test_zp_ff, :+

TESTING $E000	; |CPX #$nn|
	CPX	#$80

TESTING $E100	; |SBC ($nn,X)|
	SBC	(test_zp_ptr,X)	; FIXME: it was test_zp_data which was bad [test if it's OK now in MEGA65 causing crash when ZP is rearranged)

TESTING $E200	; |LDA ($nn,SP),Y|
	LDA	(0,SP),Y

TESTING $E300	; |INW $nn|
	INW	Z:test_zp_data

TESTING $E400	; |CPX $nn|
	CPX	Z:test_zp_data

TESTING $E500	; |SBC $nn|
	SBC	Z:test_zp_data

TESTING $E503	; |SBCQ $nn| NEG_NEG_PREFIXED
	NEG_NEG_PREFIXED
	SBC	Z:test_zp_data

TESTING $E600	; |INC $nn|
	INC	Z:test_zp_data

TESTING $E603	; |INQ $nn| NEG_NEG_PREFIXED
	NEG_NEG_PREFIXED
	INC	Z:test_zp_data

TESTING $E700	; |SMB6 $nn|
	SMB6	Z:test_zp_data

TESTING $E800	; |INX|
	INX

TESTING $E900	; |SBC #$nn|
	SBC	#$80

TESTING $EA00	; |NOP|
	NOP

TESTING $EB00	; |ROW $nnnn|
	ROW	A:test_abs_data

TESTING $EC00	; |CPX $nnnn|
	CPX	A:test_abs_data

TESTING $ED00	; |SBC $nnnn|
	SBC	A:test_abs_data

TESTING $ED03	; |SBCQ $nnnn| NEG_NEG_PREFIXED
	NEG_NEG_PREFIXED
	SBC	A:test_abs_data

TESTING $EE00	; |INC $nnnn|
	INC	A:test_abs_data

TESTING $EE03	; |INQ $nnnn| NEG_NEG_PREFIXED
	NEG_NEG_PREFIXED
	INC	A:test_abs_data

TESTING $EF00	; |BBS6 $nn,$rr|
	BBS6	test_zp_00, :+
TESTING $EF01	; |BBS6 $nn,$rr| (conditional branch taken)
	BBS6	test_zp_ff, :+

TESTING $F0FF	; |BEQ $rr| - extra stuff
	LDA	#$FF
TESTING $F000	; |BEQ $rr|
	LDA	#$FF
	BEQ	:+
TESTING $F0FF	; |BEQ $rr| (conditional branch taken) - extra stuff
	LDA	#$00
TESTING $F001	; |BEQ $rr| (conditional branch taken)
	LDA	#$00
	BEQ	:+

TESTING $F100	; |SBC ($nn),Y|
	SBC	(test_zp_ptr),Y

TESTING $F200	; |SBC ($nn),Z|
	SBC	(test_zp_ptr),Z

TESTING $F202	; |SBC [$nn],Z| NOP_PREFIXED
	NOP_PREFIXED
	SBC	(test_zp_ptr),Z

TESTING $F203	; |SBCQ ($nn)| NEG_NEG_PREFIXED (no Z!)
	NEG_NEG_PREFIXED
	SBC	(test_zp_ptr),Z

TESTING $F204	; |SBCQ [$nn]| NEG_NEG_NOP_PREFIXED (no Z!)
	NEG_NEG_NOP_PREFIXED
	SBC	(test_zp_ptr),Z

TESTING $F3FF	; |LBEQ $rrrr| - extra stuff
	LDA	#$FF
TESTING $F300	; |LBEQ $rrrr|
	LDA	#$FF
	LBEQ	:+
TESTING $F3FF	; |LBEQ $rrrr| (conditional branch taken) - extra stuff
	LDA	#$00
TESTING $F301	; |LBEQ $rrrr| (conditional branch taken)
	LDA	#$00
	LBEQ	:+

TESTING $F400	; |PHW #$nnnn|
	PHW	#$FFFF

TESTING $F500	; |SBC $nn,X|
	SBC	Z:test_zp_data,X

TESTING $F600	; |INC $nn,X|
	INC	Z:test_zp_data,X

TESTING $F603	; |INQ $nn,X| NEG_NEG_PREFIXED
	NEG_NEG_PREFIXED
	INC	Z:test_zp_data,X

TESTING $F700	; |SMB7 $nn|
	SMB7	Z:test_zp_data

TESTING $F800	; |SED|
	SED

TESTING $F900	; |SBC $nnnn,Y|
	SBC	A:test_abs_data,Y

TESTING $FA00	; |PLX|
	PLX

TESTING $FB00	; |PLZ|
	PLZ

TESTING $FC00	; |PHW $nnnn|
	PHW	$2000

TESTING $FD00	; |SBC $nnnn,X|
	SBC	A:test_abs_data,X

TESTING $FE00	; |INC $nnnn,X|
	INC	A:test_abs_data,X

TESTING $FE03	; |INQ $nnnn,X| NEG_NEG_PREFIXED
	NEG_NEG_PREFIXED
	INC	A:test_abs_data,X

TESTING $FF00	; |BBS7 $nn,$rr|
	BBS7	test_zp_00, :+
TESTING $FF01	; |BBS7 $nn,$rr| (conditional branch taken)
	BBS7	test_zp_ff, :+
